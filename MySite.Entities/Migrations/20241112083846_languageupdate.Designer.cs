// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MySite.Entities.DbContexts;

#nullable disable

namespace MySite.Entities.Migrations
{
    [DbContext(typeof(SqlDbContext))]
    [Migration("20241112083846_languageupdate")]
    partial class languageupdate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MySite.Entities.Entities.Concrete.Achievement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("AcDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Achievements");

                    b.HasData(
                        new
                        {
                            Id = 7,
                            AcDate = new DateOnly(2020, 2, 1),
                            CreateDate = new DateTime(2024, 11, 12, 11, 38, 45, 344, DateTimeKind.Local).AddTicks(7653),
                            Description = "Decleration of honor in dean’s honor list for maintaining a high GPA"
                        },
                        new
                        {
                            Id = 6,
                            AcDate = new DateOnly(2016, 1, 1),
                            CreateDate = new DateTime(2024, 11, 12, 11, 38, 45, 344, DateTimeKind.Local).AddTicks(7706),
                            Description = "Sabanci University Extracurricular Activities Award Awarded for theatre tours around the country and abroad / Organizing the Offtown Festival with\r\nthe Offtown Committee"
                        },
                        new
                        {
                            Id = 5,
                            AcDate = new DateOnly(2017, 2, 1),
                            CreateDate = new DateTime(2024, 11, 12, 11, 38, 45, 344, DateTimeKind.Local).AddTicks(7711),
                            Description = "Decleration of honor in dean’s honor list for maintaining a high GPA"
                        },
                        new
                        {
                            Id = 4,
                            AcDate = new DateOnly(2016, 9, 1),
                            CreateDate = new DateTime(2024, 11, 12, 11, 38, 45, 344, DateTimeKind.Local).AddTicks(7716),
                            Description = "Decleration of high honor in dean’s honor list for maintaining a high GPA"
                        },
                        new
                        {
                            Id = 3,
                            AcDate = new DateOnly(2015, 1, 17),
                            CreateDate = new DateTime(2024, 11, 12, 11, 38, 45, 344, DateTimeKind.Local).AddTicks(7721),
                            Description = "Turkish Championship Bilecik Youth Group First Place (Türkiye Şampiyonası Bilecik Basketbol Gençler Grup Birinci) with Karşıyaka Anatolian High School Basketball Team"
                        },
                        new
                        {
                            Id = 2,
                            AcDate = new DateOnly(2015, 2, 1),
                            CreateDate = new DateTime(2024, 11, 12, 11, 38, 45, 344, DateTimeKind.Local).AddTicks(7728),
                            Description = "2014 - 2015 Basketball Young Girls Province Cup Third Place (2014 - 2015 Basketbol Genç Kızlar İl (İzmir) Kupası) with Karşıyaka Anatolian High school Basketball Team"
                        },
                        new
                        {
                            Id = 1,
                            AcDate = new DateOnly(2013, 2, 1),
                            CreateDate = new DateTime(2024, 11, 12, 11, 38, 45, 344, DateTimeKind.Local).AddTicks(7732),
                            Description = "Basketball Distict Cup First Place (Basketbol İlçe Kaymakamlik Kupası) with Karşıyaka Anatolian High school Basketball Team"
                        });
                });

            modelBuilder.Entity("MySite.Entities.Entities.Concrete.Activitie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly>("DateBegining")
                        .HasColumnType("date");

                    b.Property<DateOnly>("DateEnding")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Activities");

                    b.HasData(
                        new
                        {
                            Id = 5,
                            CreateDate = new DateTime(2024, 11, 12, 11, 38, 45, 345, DateTimeKind.Local).AddTicks(882),
                            DateBegining = new DateOnly(2015, 9, 1),
                            DateEnding = new DateOnly(2021, 9, 1),
                            Description = "Member, director and actress",
                            Title = "Sabanci University Drama Club"
                        },
                        new
                        {
                            Id = 4,
                            CreateDate = new DateTime(2024, 11, 12, 11, 38, 45, 345, DateTimeKind.Local).AddTicks(912),
                            DateBegining = new DateOnly(2017, 9, 1),
                            DateEnding = new DateOnly(2018, 9, 1),
                            Description = "Co- President",
                            Title = "Sabanci University Drama Club"
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2024, 11, 12, 11, 38, 45, 345, DateTimeKind.Local).AddTicks(917),
                            DateBegining = new DateOnly(2015, 9, 1),
                            DateEnding = new DateOnly(2018, 9, 1),
                            Description = "Member, media coordinator and media, concert, sponsorship contractor",
                            Title = "Sabanci University Offtown Committee"
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2024, 11, 12, 11, 38, 45, 345, DateTimeKind.Local).AddTicks(922),
                            DateBegining = new DateOnly(2017, 9, 1),
                            DateEnding = new DateOnly(2018, 9, 1),
                            Description = "Organizing a nation-wide theatre festival",
                            Title = "\"Üniversitelerarası Tiyatro Festivali\""
                        },
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2024, 11, 12, 11, 38, 45, 345, DateTimeKind.Local).AddTicks(927),
                            DateBegining = new DateOnly(2015, 9, 1),
                            DateEnding = new DateOnly(2016, 5, 1),
                            Description = "Member",
                            Title = "Sabanci University \"SURK\" Robotics Club"
                        });
                });

            modelBuilder.Entity("MySite.Entities.Entities.Concrete.Education", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Degree")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateOnly>("ScBeginning")
                        .HasColumnType("date");

                    b.Property<DateOnly>("ScEndning")
                        .HasColumnType("date");

                    b.Property<string>("ScName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Educations");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2024, 11, 12, 11, 38, 45, 345, DateTimeKind.Local).AddTicks(4035),
                            Degree = "2,91",
                            Description = "BSC Mechatronics Engineering",
                            ScBeginning = new DateOnly(2015, 9, 1),
                            ScEndning = new DateOnly(2021, 2, 4),
                            ScName = "Sabancı University"
                        },
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2024, 11, 12, 11, 38, 45, 345, DateTimeKind.Local).AddTicks(4064),
                            Degree = "89.90",
                            Description = "",
                            ScBeginning = new DateOnly(2010, 9, 1),
                            ScEndning = new DateOnly(2015, 6, 1),
                            ScName = "Karşıyaka Anatolian High School"
                        });
                });

            modelBuilder.Entity("MySite.Entities.Entities.Concrete.Experience", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly>("ExBeginning")
                        .HasColumnType("date");

                    b.Property<string>("ExDescription")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateOnly>("ExEnding")
                        .HasColumnType("date");

                    b.Property<string>("ExPlace")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ExTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Experiences");

                    b.HasData(
                        new
                        {
                            Id = 6,
                            CreateDate = new DateTime(2024, 11, 12, 11, 38, 45, 345, DateTimeKind.Local).AddTicks(7317),
                            ExBeginning = new DateOnly(2019, 7, 1),
                            ExDescription = "Assembled and adapted PLC to old German Ring Twisted Machines",
                            ExEnding = new DateOnly(2019, 8, 31),
                            ExPlace = "Kordsa",
                            ExTitle = "Internship"
                        },
                        new
                        {
                            Id = 5,
                            CreateDate = new DateTime(2024, 11, 12, 11, 38, 45, 345, DateTimeKind.Local).AddTicks(7345),
                            ExBeginning = new DateOnly(2018, 6, 1),
                            ExDescription = "Provided introductory campus tour for visitors. Gave additional information though phone calls and the information stand",
                            ExEnding = new DateOnly(2019, 3, 31),
                            ExPlace = "Sabanci University",
                            ExTitle = "Introduction Team Member"
                        },
                        new
                        {
                            Id = 4,
                            CreateDate = new DateTime(2024, 11, 12, 11, 38, 45, 345, DateTimeKind.Local).AddTicks(7350),
                            ExBeginning = new DateOnly(2017, 7, 1),
                            ExDescription = "Planned drama class curriculum Conducted drama and acting class for in the scope of Highschool Summer School",
                            ExEnding = new DateOnly(2017, 8, 31),
                            ExPlace = "Sabanci University",
                            ExTitle = "Creator Drama & Acting Instructor"
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2024, 11, 12, 11, 38, 45, 345, DateTimeKind.Local).AddTicks(7355),
                            ExBeginning = new DateOnly(2018, 7, 1),
                            ExDescription = "Planned drama class curriculum Conducted drama and acting class for in the scope of Highschool Summer School",
                            ExEnding = new DateOnly(2018, 8, 31),
                            ExPlace = "Sabanci University",
                            ExTitle = "Creator Drama & Acting Instructor"
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2024, 11, 12, 11, 38, 45, 345, DateTimeKind.Local).AddTicks(7360),
                            ExBeginning = new DateOnly(2015, 6, 1),
                            ExDescription = "Attended meetings with the manager of the center Provided correlation in mailing system",
                            ExEnding = new DateOnly(2016, 8, 31),
                            ExPlace = "Efesus Outlet Center",
                            ExTitle = "Part-Time Assistant in Administration"
                        },
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2024, 11, 12, 11, 38, 45, 345, DateTimeKind.Local).AddTicks(7368),
                            ExBeginning = new DateOnly(2011, 6, 1),
                            ExDescription = "Kept record of the balance sheet by using Excel efficiently Provided report of the profit and loss account statement",
                            ExEnding = new DateOnly(2011, 8, 31),
                            ExPlace = "Ibrahim Ozturk Independent Accountant And Tax Professional",
                            ExTitle = "Asistant"
                        });
                });

            modelBuilder.Entity("MySite.Entities.Entities.Concrete.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Languages")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2024, 11, 12, 11, 38, 45, 346, DateTimeKind.Local).AddTicks(60),
                            Description = "Mother Language",
                            Languages = "Turkish"
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2024, 11, 12, 11, 38, 45, 346, DateTimeKind.Local).AddTicks(88),
                            Description = "Upper Intermediate",
                            Languages = "English"
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2024, 11, 12, 11, 38, 45, 346, DateTimeKind.Local).AddTicks(93),
                            Description = "Elemantary",
                            Languages = "Germany"
                        });
                });

            modelBuilder.Entity("MySite.Entities.Entities.Concrete.MainMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ActionName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AreaName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ControllerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CssName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("IconName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("MenuName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<int?>("ParentMenuId")
                        .HasColumnType("int");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("ParentMenuId");

                    b.HasIndex("RoleId");

                    b.ToTable("MainMenus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActionName = "About",
                            ClassName = "far fa-circle nav-icon",
                            ControllerName = "Home",
                            CreateDate = new DateTime(2024, 11, 12, 11, 38, 45, 346, DateTimeKind.Local).AddTicks(3488),
                            CssName = "#about",
                            MenuName = "About",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 2,
                            ActionName = "Education",
                            ClassName = "far fa-circle nav-icon",
                            ControllerName = "Home",
                            CreateDate = new DateTime(2024, 11, 12, 11, 38, 45, 346, DateTimeKind.Local).AddTicks(3496),
                            CssName = "#education",
                            MenuName = "Education",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 3,
                            ActionName = "Experience",
                            ClassName = "far fa-circle nav-icon",
                            ControllerName = "Home",
                            CreateDate = new DateTime(2024, 11, 12, 11, 38, 45, 346, DateTimeKind.Local).AddTicks(3498),
                            CssName = "#experience",
                            MenuName = "Experience",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 4,
                            ActionName = "Project",
                            ClassName = "far fa-circle nav-icon",
                            ControllerName = "Home",
                            CreateDate = new DateTime(2024, 11, 12, 11, 38, 45, 346, DateTimeKind.Local).AddTicks(3500),
                            CssName = "#project",
                            MenuName = "Projects",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 5,
                            ActionName = "Skill",
                            ClassName = "far fa-circle nav-icon",
                            ControllerName = "Home",
                            CreateDate = new DateTime(2024, 11, 12, 11, 38, 45, 346, DateTimeKind.Local).AddTicks(3502),
                            CssName = "#skill",
                            MenuName = "Skills",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 6,
                            ActionName = "Achievement",
                            ClassName = "far fa-circle nav-icon",
                            ControllerName = "Home",
                            CreateDate = new DateTime(2024, 11, 12, 11, 38, 45, 346, DateTimeKind.Local).AddTicks(3504),
                            CssName = "#achievement",
                            MenuName = "Achievements",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 7,
                            ActionName = "Activitie",
                            ClassName = "far fa-circle nav-icon",
                            ControllerName = "Home",
                            CreateDate = new DateTime(2024, 11, 12, 11, 38, 45, 346, DateTimeKind.Local).AddTicks(3507),
                            CssName = "#activitie",
                            MenuName = "Activities",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 8,
                            ActionName = "Language",
                            ClassName = "far fa-circle nav-icon",
                            ControllerName = "Home",
                            CreateDate = new DateTime(2024, 11, 12, 11, 38, 45, 346, DateTimeKind.Local).AddTicks(3509),
                            CssName = "#language",
                            MenuName = "Languages",
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("MySite.Entities.Entities.Concrete.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 8,
                            CreateDate = new DateTime(2024, 11, 12, 11, 38, 45, 346, DateTimeKind.Local).AddTicks(7108),
                            Date = new DateOnly(2021, 9, 1),
                            Description = "Designed a lower-limb exoskeleton and improved the prototypes for the walk and rehabilitation of the paraplegic people. Joined the Biotechnology Innovation Competition with this project in Teknofest 2021",
                            Title = "Lower-Limb Exoskeleton with EEG/Team EXONIX"
                        },
                        new
                        {
                            Id = 7,
                            CreateDate = new DateTime(2024, 11, 12, 11, 38, 45, 346, DateTimeKind.Local).AddTicks(7136),
                            Date = new DateOnly(2021, 2, 4),
                            Description = "Designed and simulated a wheeled robot system of 2 DOF using MATLAB Simulink & Solidworks that moves and recognizes the obstacle",
                            Title = "Bilateral Steering for a Mobile Robot"
                        },
                        new
                        {
                            Id = 6,
                            CreateDate = new DateTime(2024, 11, 12, 11, 38, 45, 346, DateTimeKind.Local).AddTicks(7141),
                            Date = new DateOnly(2020, 6, 1),
                            Description = "Simulated and analyzed energy harvesting of piezoelectric sensor using MATLAB Simulink",
                            Title = "Piezoelectric Energy Harvesters"
                        },
                        new
                        {
                            Id = 5,
                            CreateDate = new DateTime(2024, 11, 12, 11, 38, 45, 346, DateTimeKind.Local).AddTicks(7149),
                            Date = new DateOnly(2020, 6, 1),
                            Description = "Simulated desired design using MATLAB Simulink, researched bio-mechatronic market extensively, designed a system using Solidworks",
                            Title = "Designing a Portable Arm Injection System"
                        },
                        new
                        {
                            Id = 4,
                            CreateDate = new DateTime(2024, 11, 12, 11, 38, 45, 346, DateTimeKind.Local).AddTicks(7153),
                            Date = new DateOnly(2019, 12, 30),
                            Description = "Designing a system containing, wiring and coding given as a class project using Siemens Simatic, BECKHOFF Twincat and PLC",
                            Title = "Production Line Design with PLC"
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2024, 11, 12, 11, 38, 45, 346, DateTimeKind.Local).AddTicks(7175),
                            Date = new DateOnly(2018, 12, 30),
                            Description = "Provided comprehensive 3D construction of a bicycle in Solidworks including dynamic parts",
                            Title = "Implementing Bicycle in to Solidworks"
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2024, 11, 12, 11, 38, 45, 346, DateTimeKind.Local).AddTicks(7181),
                            Date = new DateOnly(2016, 12, 30),
                            Description = "Provided market analysis by conducting polls for several products By analyzing polls defined the relationship between consumption choice and Evolutionary Roots",
                            Title = "Researching Evolutionary Roots of Consumption"
                        },
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2024, 11, 12, 11, 38, 45, 346, DateTimeKind.Local).AddTicks(7186),
                            Date = new DateOnly(2015, 12, 30),
                            Description = "Voluntarily contributed to the social improvements of elementary school students in Istanbul",
                            Title = "Civic Involvement Project"
                        });
                });

            modelBuilder.Entity("MySite.Entities.Entities.Concrete.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("RoleName")
                        .IsUnique();

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2024, 11, 12, 11, 38, 45, 347, DateTimeKind.Local).AddTicks(584),
                            RoleName = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2024, 11, 12, 11, 38, 45, 347, DateTimeKind.Local).AddTicks(612),
                            RoleName = "User"
                        });
                });

            modelBuilder.Entity("MySite.Entities.Entities.Concrete.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ComputerSkills")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ComputerSkills = "Microsoft Office Tools: Word, Excel, PowerPoint",
                            CreateDate = new DateTime(2024, 11, 12, 11, 38, 45, 347, DateTimeKind.Local).AddTicks(3271)
                        },
                        new
                        {
                            Id = 2,
                            ComputerSkills = "PLC",
                            CreateDate = new DateTime(2024, 11, 12, 11, 38, 45, 347, DateTimeKind.Local).AddTicks(3294)
                        },
                        new
                        {
                            Id = 3,
                            ComputerSkills = "Arduino",
                            CreateDate = new DateTime(2024, 11, 12, 11, 38, 45, 347, DateTimeKind.Local).AddTicks(3299)
                        },
                        new
                        {
                            Id = 4,
                            ComputerSkills = "MATLAB",
                            CreateDate = new DateTime(2024, 11, 12, 11, 38, 45, 347, DateTimeKind.Local).AddTicks(3303)
                        },
                        new
                        {
                            Id = 5,
                            ComputerSkills = "Solidworks",
                            CreateDate = new DateTime(2024, 11, 12, 11, 38, 45, 347, DateTimeKind.Local).AddTicks(3306)
                        },
                        new
                        {
                            Id = 6,
                            ComputerSkills = "COMSOL",
                            CreateDate = new DateTime(2024, 11, 12, 11, 38, 45, 347, DateTimeKind.Local).AddTicks(3313)
                        },
                        new
                        {
                            Id = 7,
                            ComputerSkills = "Xilinx",
                            CreateDate = new DateTime(2024, 11, 12, 11, 38, 45, 347, DateTimeKind.Local).AddTicks(3317)
                        },
                        new
                        {
                            Id = 8,
                            ComputerSkills = "Solidworks",
                            CreateDate = new DateTime(2024, 11, 12, 11, 38, 45, 347, DateTimeKind.Local).AddTicks(3320)
                        },
                        new
                        {
                            Id = 9,
                            ComputerSkills = "Microsoft Visual Studio, Microsoft Visual Codes, C#",
                            CreateDate = new DateTime(2024, 11, 12, 11, 38, 45, 347, DateTimeKind.Local).AddTicks(3324)
                        },
                        new
                        {
                            Id = 10,
                            ComputerSkills = "SQL, PostgreSQL, SQLite",
                            CreateDate = new DateTime(2024, 11, 12, 11, 38, 45, 347, DateTimeKind.Local).AddTicks(3329)
                        },
                        new
                        {
                            Id = 11,
                            ComputerSkills = "\r\nObject-Oriented Programming (OOP)",
                            CreateDate = new DateTime(2024, 11, 12, 11, 38, 45, 347, DateTimeKind.Local).AddTicks(3333)
                        },
                        new
                        {
                            Id = 12,
                            ComputerSkills = "\r\nEntity Framework (EF) Core",
                            CreateDate = new DateTime(2024, 11, 12, 11, 38, 45, 347, DateTimeKind.Local).AddTicks(3336)
                        },
                        new
                        {
                            Id = 13,
                            ComputerSkills = "\r\nHTML, CSS",
                            CreateDate = new DateTime(2024, 11, 12, 11, 38, 45, 347, DateTimeKind.Local).AddTicks(3341)
                        });
                });

            modelBuilder.Entity("MySite.Entities.Entities.Concrete.SocialMedia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Medialink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("UserId");

                    b.ToTable("SocialMedias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2024, 11, 12, 11, 38, 45, 347, DateTimeKind.Local).AddTicks(6212),
                            Medialink = "\r\nhttps://www.linkedin.com/in/idil-erdoğan-725458159/",
                            Name = "LinkedIn"
                        });
                });

            modelBuilder.Entity("MySite.Entities.Entities.Concrete.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(19)
                        .HasColumnType("nvarchar(19)");

                    b.Property<string>("SurName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Id");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2024, 11, 12, 11, 38, 45, 348, DateTimeKind.Local).AddTicks(1119),
                            Description = "",
                            Email = "idilerdogan@sabanciuniv.edu",
                            Name = "İdil",
                            Password = "qwe",
                            Phone = "+90 539 371 69 85",
                            SurName = "Erdoğan",
                            UserName = "idilerdogan"
                        });
                });

            modelBuilder.Entity("RoleUser", b =>
                {
                    b.Property<int>("RolesId")
                        .HasColumnType("int");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("RolesId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("RoleUser");
                });

            modelBuilder.Entity("MySite.Entities.Entities.Concrete.Achievement", b =>
                {
                    b.HasOne("MySite.Entities.Entities.Concrete.User", null)
                        .WithMany("Achievements")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("MySite.Entities.Entities.Concrete.Activitie", b =>
                {
                    b.HasOne("MySite.Entities.Entities.Concrete.User", null)
                        .WithMany("Activities")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("MySite.Entities.Entities.Concrete.Education", b =>
                {
                    b.HasOne("MySite.Entities.Entities.Concrete.User", null)
                        .WithMany("Education")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("MySite.Entities.Entities.Concrete.Experience", b =>
                {
                    b.HasOne("MySite.Entities.Entities.Concrete.User", null)
                        .WithMany("Experiances")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("MySite.Entities.Entities.Concrete.Language", b =>
                {
                    b.HasOne("MySite.Entities.Entities.Concrete.User", null)
                        .WithMany("Languages")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("MySite.Entities.Entities.Concrete.MainMenu", b =>
                {
                    b.HasOne("MySite.Entities.Entities.Concrete.MainMenu", "ParentMenu")
                        .WithMany()
                        .HasForeignKey("ParentMenuId");

                    b.HasOne("MySite.Entities.Entities.Concrete.Role", "Roles")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.Navigation("ParentMenu");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("MySite.Entities.Entities.Concrete.Project", b =>
                {
                    b.HasOne("MySite.Entities.Entities.Concrete.User", null)
                        .WithMany("Projects")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("MySite.Entities.Entities.Concrete.Skill", b =>
                {
                    b.HasOne("MySite.Entities.Entities.Concrete.User", null)
                        .WithMany("Skills")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("MySite.Entities.Entities.Concrete.SocialMedia", b =>
                {
                    b.HasOne("MySite.Entities.Entities.Concrete.User", null)
                        .WithMany("SocialMedias")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("RoleUser", b =>
                {
                    b.HasOne("MySite.Entities.Entities.Concrete.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MySite.Entities.Entities.Concrete.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MySite.Entities.Entities.Concrete.User", b =>
                {
                    b.Navigation("Achievements");

                    b.Navigation("Activities");

                    b.Navigation("Education");

                    b.Navigation("Experiances");

                    b.Navigation("Languages");

                    b.Navigation("Projects");

                    b.Navigation("Skills");

                    b.Navigation("SocialMedias");
                });
#pragma warning restore 612, 618
        }
    }
}
